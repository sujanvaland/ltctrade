@model ContactUsModel
@using SmartStore.Web.Models.Common;
@{
	Layout = "_Layout";

	Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : T("PageTitle.ContactUs").Text);
	Html.AddMetaDescriptionParts(Model.MetaDescription);
	Html.AddMetaKeywordParts(Model.MetaKeywords);
}
<div class="hero-wrap hero-wrap-2" style="background-image: url('/Content/theme/images/bg_1.jpg');" data-stellar-background-ratio="0.5">
	<div class="overlay"></div>
	<div class="container">
		<div class="row no-gutters slider-text align-items-end justify-content-start">
			<div class="col-md-8 ftco-animate text-center text-md-left mb-5">
				<p class="breadcrumbs mb-0"><span class="mr-3"><a href="@Url.Action("Index","Home")">Home <i class="ion-ios-arrow-forward"></i></a></span> <span>Contact</span></p>
				<h1 class="mb-3 bread">Contact</h1>
			</div>
		</div>
	</div>
</div>
<div class="pagewidth">
	<div class="container">
		<div class="page contact-page">
			<div class="page-title mt-50">
				<h1>@T("PageTitle.ContactUs")</h1>
			</div>
			@{ Html.RenderAction("TopicBlock", "Topic", new { systemName = "ContactUs", isLead = true, bodyOnly = true }); }
			<div class="page-body martop25">
				@{ Html.RenderWidget("contactus_top"); }
				@if (Model.SuccessfullySent)
				{
					<div class="alert alert-success">
						@Model.Result
					</div>
				}
				else
				{
					using (Html.BeginRouteForm("ContactUs", FormMethod.Post, new { @class = "contact-form" }))
					{
						if (!ViewData.ModelState.IsValid)
						{
							@Html.ValidationSummary(false)
						}

						if (this.EnableHoneypotProtection)
						{
							<div class="d-none">
								@Html.HoneypotField()
							</div>
						}

						@Html.ControlGroupFor(model => model.FullName, required: Model.FullNameRequired, breakpoint: "sm")
						@Html.ControlGroupFor(model => model.Email, required: true, breakpoint: "sm")

						<div class="form-group row">
							@Html.LabelFor(model => model.Enquiry, new { @class = "col-sm-3 col-form-label required" })
							<div class="col-sm-9">
								@Html.TextAreaFor(model => model.Enquiry, new { @class = "form-control", rows = "6", placeholder = T("ContactUs.Enquiry.Hint") })
								@Html.ValidationMessageFor(model => model.Enquiry)
							</div>
						</div>
						<div class="row justify-content-end">
							<div class="col-md-3"></div>
							<div class="col-sm-9">
								@{ Html.RenderWidget("gdpr_consent"); }
							</div>
						</div>

						if (Model.DisplayCaptcha)
						{
							<div class="form-group row">
								<div class="col col-sm-auto offset-sm-3 captcha-box">
									@Html.Raw(Html.GenerateCaptcha())
								</div>
							</div>
						}

						<div class="form-group row">
							<div class="col-sm-3"></div>
							<div class="col col-sm-9">
								<button type="submit" name="send-email" class="btn btn-primary btn-lg btn-block">
									@T("ContactUs.Button")
								</button>
							</div>
						</div>
					}
				}
				@{ Html.RenderWidget("contactus_bottom"); }

				<!-- End Header  -->

			</div>
		</div>
	</div>
</div>